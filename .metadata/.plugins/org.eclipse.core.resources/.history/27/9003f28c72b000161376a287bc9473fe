package kai.system.system;

import java.util.Date;

import org.json.JSONException;
import org.json.JSONObject;

public class Kai {
	// Class Members definition
	private String webUri;
	private String rosUri;
	private String dbUri;
	private int rosPort;
	private static JSONObject connMsg;

	RosConnection rosConn;
	SocketConnection webConn;
	DatabaseConnection dbConn;

	private void createStdConnMsg() {
		connMsg = new JSONObject();
		try {
			connMsg.append("origin", "Kai");
			connMsg.append("date", new Date());
			connMsg.append("status", 1);
			connMsg.append("msg", "System is offline");
		} catch (JSONException e) {
			e.printStackTrace();
		}
	}
	
	public Kai(String webUri, String rosUri, int rosPort, String dbUri) {
		this.webUri = webUri;
		this.rosUri = rosUri;
		this.rosPort = rosPort;
		this.dbUri = dbUri;
		this.createStdConnMsg();
	}

	public void connect() {
		this.connectWeb();
		this.connectRos();
	}

	public void connectWeb() {
		// Create a web connection
		// Wait for connection to set or 5ms
		webConn = new SocketConnection(webUri);
		long strt = System.currentTimeMillis();
		while ( !this.webConnected() && (System.currentTimeMillis()-strt < 5000) ) {}
	}

	public void connectRos() {
		if (!this.rosConnected()) {
			rosConn = new RosConnection(rosUri, rosPort);
		}
	}

	public void connectDB() {
		dbConn = new DatabaseConnection(dbUri);
		this.dbUri = dbConn.getDBUri();
	}

	public RosConnection getROSConn() {
		return rosConn;
	}

	public SocketConnection getWebConn() {
		return webConn;
	}

	public DatabaseConnection getDBConn() {
		return dbConn;
	}

	public boolean webConnected() {
		return (webConn == null) ? false : webConn.isConnected();
	}

	public boolean rosConnected() {
		return (rosConn == null) ? false : rosConn.isConnected();
	}
	
	public static JSONObject standardConnectionMsg() {
		return connMsg;
	}
	
	public static boolean updateStatusMsg(int status, String msg) {
		try {
			connMsg.append("origin", "Kai");
			connMsg.append("date", new Date());
			connMsg.append("status", 1);
			connMsg.append("msg", "System is offline");
		} catch (JSONException e) {
			return false;
		}
		return true;
	}
}
