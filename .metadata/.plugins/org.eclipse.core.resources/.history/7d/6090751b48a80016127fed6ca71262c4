package kai.system.devices;

import java.util.HashMap;
import java.util.Map.Entry;

import org.json.JSONException;
import org.json.JSONObject;

public class ExternalDevice extends Devices {
	// device id conversion
	private static HashMap<String, String> ext_2_int_dev;
		
	// String Constant comparison
	static final String DEVICE_TYPE = "_type";
	static final String DEVICE_ID = "_id";
	static final String DEVICE_NAME = "_name";
	static final String DEVICE_STATE = "_state";
	static final String DEVICE_STATUS = "_status";
	private int device_type;
	
	// Class data members
	private String _type;
	private String _id;
	private String _name;
	private boolean _state;
	private String _status;
	private String extMsg;
	private boolean error_flag;
	private String err_msg;
	
	public ExternalDevice() {
		for(Entry<String, String> el:devices.entrySet()) {
			String key = el.getKey();
			String value = el.getValue();
			ext_2_int_dev.put(key, value);
		}
	}
	
	public void parse(String msg) {
		// Expected String
		// {id: "some id", name: "some name", status: "true or false"}
		try {
			parseJSON( new JSONObject(msg) );
		} catch (JSONException e) {
			error_flag = true;
			err_msg = "Error generated (External Dev). Invalid String JSON object message";
			System.out.println(err_msg);
		}
	}
	
	public void parseJSON(JSONObject msg) {
		reset();
		try {
			_id = msg.getString("id");
//			_name = msg.getString("name");
			_status = msg.getString("status");
		} catch (JSONException e) {
			// set error in parsing message
			error_flag = true;
			err_msg = "Error generated in parsing JSON message";
			System.out.println(err_msg);
		}
	}
	
	public void reset() {
		device_type = -1;		// Device type not supported
		_type = null;
		_id = null;
		_name = null;
		_state = false;
		_status = null;
		extMsg = null;
		error_flag = false;
		err_msg = null;
	}
	
	public String toString() {
		// TODO Auto-generated method stub
		return null;
	}

	public boolean errorGenerated() {
		return error_flag;
	}

	public String errorMessage() {
		return err_msg;
	}

}
