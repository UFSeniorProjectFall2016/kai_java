package main.java;

import kai.system.states.States;
import kai.system.states.StatesFactory;
import kai.system.system.Kai;

public class Start {
	public static States state;
	public static boolean msg_flag = false;
	public static boolean err_flag = false;
	public static String msg = "";

	public static void main(String[] args) {
		// String retrieved from args
		String webUri = "https://sleepy-inlet-14613.herokuapp.com/";
		String rosUri = "localhost";
		int rosPort = 9090;

		// System and the states pattern for the system to move through
		Kai kai = new Kai(webUri, rosUri, rosPort);
		Start.state = StatesFactory.getState(StatesFactory.RECEIVING_STATE);

		// Try establishing connection for 5 seconds max
		long strt = System.currentTimeMillis();
		System.out.println("Connecting to web ...");
		kai.connect();
		while (!kai.webConnected() && (System.currentTimeMillis() - strt < 5000)) {}

		while(true) {
			
		}

		// do {
		// // BOOT UP STATE
		//
		// // CONNECTING STATE (Web & Ros)
		// System.out.println("CONNECTING STATE");
		// kai = new Kai(webUri, rosUri, rosPort);
		//
		// System.out.println("Connecting to Web ...");
		// while(!kai.webConnected()) {}
		//
		// System.out.println("Connecting to ROS ...");
		//
		//
		// // STATE PATTERN EXECUTION
		// } while (true);
	}

	public static void clearMessage() {
		Start.msg = "";
		Start.msg_flag = false;
	}

	public static void clearState() {
		Start.state = null;
	}
}
